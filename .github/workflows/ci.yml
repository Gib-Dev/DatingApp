name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore API/API.csproj
    
    - name: Build
      run: dotnet build API/API.csproj --no-restore
    
    - name: Test
      run: dotnet test API/API.csproj --no-build --verbosity normal

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install dependencies
      run: npm ci
      working-directory: client
    
    - name: Build
      run: npm run build
      working-directory: client
    
    - name: Test
      run: npm test -- --watch=false --browsers=ChromeHeadless
      working-directory: client

  build-and-deploy:
    needs: [backend-tests, frontend-tests]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Build Backend
      run: dotnet publish API/API.csproj -c Release -o ./publish
    
    - name: Build Frontend
      run: |
        cd client
        npm ci
        npm run build
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: datingapp-build
        path: |
          ./publish
          ./client/dist
